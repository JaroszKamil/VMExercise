// <auto-generated />
using DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(VMDBContext))]
    partial class VMCustomersDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Model.Address", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("AddressType")
                        .HasColumnType("varchar(1)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZIP")
                        .HasColumnType("varchar(20)");

                    b.HasKey("CustomerId", "AddressType");

                    b.HasIndex("CustomerId", "Name");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("DataAccess.Model.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerId", "Name");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DataAccess.Model.Address", b =>
                {
                    b.HasOne("DataAccess.Model.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId", "Name")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
